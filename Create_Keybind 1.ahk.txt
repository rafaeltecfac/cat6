    ; Function to reset the press count.
    ResetCount(*) {
        this.pressCount := 0
    }

    ; Reset other keybinds.
    ResetOthers() {
        global keybindInstances
        for instance in keybindInstances {
            if instance != this {
                instance.ResetCount()
            }
        }
    }

    ; Function to reset the count if any other key is pressed.
    static ResetOnAnyKey(key) {
        global keybindInstances
        for instance in keybindInstances {
            ; Only reset if the pressed key is different from the keybind of the instance.
            if (key != instance.keybind) {
                instance.ResetCount()
            }
        }
    }
}

; List of keys that will reset the press count if pressed.
keys := [
    "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", 
    "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", 
    "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", 
    "Enter", "Space", "Backspace", "Tab", "Shift", "Ctrl", "Alt", "Esc", 
    "LWin", "RWin", "CapsLock", "Up", "Down", "Left", "Right", 
    "PgUp", "PgDn", "Home", "End", "Del", "Ins"
]

; Create hotkeys for each of the listed keys to reset the count.
for key in keys {
	;HotIfWinActive "ahk_exe chrome.exe" ; Only run when Chrome is active
    Hotkey(Format("$~*{}", key), Create_Keybind.ResetOnAnyKey.Bind(key), "On")
}


; Usage:
; Create_Keybind( keybind, press count, milliseconds timeout, message )
; Create_Keybind("a", 3, 500, "alex@gmail.com")
; Create_Keybind("b", 3, 500, "Best regards,{Enter}Alex")